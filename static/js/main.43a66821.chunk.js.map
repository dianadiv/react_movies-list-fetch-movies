{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","currentMovie","handleAdd","useState","query","setQuery","queryForSearch","seQueryForSearch","setMovie","error","setError","loading","setLoading","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","data","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","disabled","length","onClick","undefined","App","setMovies","newMovie","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.43a66821.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { MovieData } from '../../types/MovieData';\nimport { Movie } from '../../types/Movie';\n\nconst defaultURL = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ninterface Props{\n  handleAdd: (movie: Movie) => void,\n}\n\nexport const FindMovie: React.FC<Props> = ({ handleAdd }) => {\n  const [query, setQuery] = useState('');\n  const [queryForSearch, seQueryForSearch] = useState('');\n  const [movie, setMovie] = useState<MovieData | undefined>();\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleSearch = (event: React.FormEvent<HTMLFormElement>) => {\n    event?.preventDefault();\n    seQueryForSearch(query);\n    setLoading(true);\n    getMovie(query)\n      .then((data) => {\n        if ('Error' in data) {\n          setError(true);\n        } else {\n          setMovie(data);\n        }\n      })\n      .finally(() => setLoading(false));\n  };\n\n  let currentMovie: Movie | undefined;\n\n  if (movie) {\n    currentMovie = {\n      title: movie?.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster === 'N/A' ? defaultURL : movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      imdbId: movie.imdbID,\n    };\n  }\n\n  const handleClickOnAdd = () => {\n    if (currentMovie !== undefined) {\n      handleAdd(currentMovie);\n    }\n\n    setQuery('');\n    setMovie(undefined);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={handleSearch}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error && query === queryForSearch,\n              })}\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          {error && query === queryForSearch && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button', 'is-light', { 'is-loading': loading },\n              )}\n              disabled={query.length === 0}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {currentMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleClickOnAdd()}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {currentMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={currentMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7b0cc40a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAdd = (newMovie: Movie) => {\n    const isMovieAlready = movies.find(\n      movie => movie.imdbId === newMovie.imdbId,\n    );\n\n    if (!isMovieAlready) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie handleAdd={handleAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}